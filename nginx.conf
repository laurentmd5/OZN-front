
user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging optimisé
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';
    
    access_log /var/log/nginx/access.log main;

    # Optimisations de performance
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    keepalive_requests 100;
    reset_timedout_connection on;
    client_body_timeout 10;
    send_timeout 10;
    
    # Limites de buffer
    client_body_buffer_size 128k;
    client_max_body_size 10m;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 8k;

    # Compression Gzip
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_min_length 1000;
    gzip_disable "msie6";
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        text/x-component
        application/javascript
        application/x-javascript
        application/json
        application/xml
        application/rss+xml
        application/vnd.ms-fontobject
        font/truetype
        font/opentype
        image/svg+xml;

    # Cache des fichiers ouverts
    open_file_cache max=1000 inactive=20s;
    open_file_cache_valid 30s;
    open_file_cache_min_uses 2;
    open_file_cache_errors on;

    # Configuration du serveur
    server {
        listen 8090 default_server;
        listen [::]:8090 default_server;
        server_name _;
        
        root /usr/share/nginx/html;
        index index.html;

        # En-têtes de sécurité
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;
        
        # HSTS (à activer uniquement si HTTPS est configuré)
        # add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
        
        # Désactivation de la signature du serveur
        server_tokens off;

        # Cache pour les assets statiques
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot|otf)$ {
            expires 1y;
            add_header Cache-Control "public, immutable, max-age=31536000";
            add_header Vary "Accept-Encoding";
            access_log off;
        }

        # Cache pour les fichiers JavaScript Flutter
        location ~* \.(dart\.js|js\.map)$ {
            expires 1y;
            add_header Cache-Control "public, immutable, max-age=31536000";
            add_header Vary "Accept-Encoding";
            access_log off;
        }

        # Pas de cache pour le HTML principal
        location ~* \.(html)$ {
            expires -1;
            add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0";
        }

        # Gestion des routes SPA (Single Page Application)
        location / {
            try_files $uri $uri/ /index.html;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
            add_header Expires "0";
        }

        # Blocage des fichiers sensibles et cachés
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
            return 404;
        }

        # Blocage des fichiers de configuration
        location ~* \.(git|gitignore|env|config|ini|log|sql|bak|swp|old)$ {
            deny all;
            access_log off;
            log_not_found off;
            return 404;
        }

        # Blocage des fichiers de développement
        location ~* (composer\.json|package\.json|package-lock\.json|yarn\.lock|\.dockerignore|Dockerfile)$ {
            deny all;
            access_log off;
            log_not_found off;
            return 404;
        }

        # Health check endpoint
        location /health {
            access_log off;
            add_header Content-Type text/plain;
            return 200 "healthy\n";
        }

        # Endpoint de statut (optionnel, à sécuriser en production)
        location /nginx_status {
            stub_status on;
            access_log off;
            allow 127.0.0.1;
            deny all;
        }

        # Pages d'erreur personnalisées
        error_page 404 /index.html;
        error_page 500 502 503 504 /50x.html;
        
        location = /50x.html {
            root /usr/share/nginx/html;
            internal;
        }

        # Protection contre les attaques
        location ~ /(wp-admin|wp-login|xmlrpc) {
            deny all;
            access_log off;
            log_not_found off;
            return 404;
        }

        # Limitation du taux de requêtes (optionnel)
        # limit_req_zone $binary_remote_addr zone=one:10m rate=10r/s;
        # limit_req zone=one burst=20 nodelay;
    }
}