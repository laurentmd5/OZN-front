# Utilisation de la variable de build (via envsubst dans un cas plus complexe, mais ici directement)
listen ${NGINX_PORT};

server {
    # Port défini par le build-arg/variable d'environnement
    listen ${NGINX_PORT};
    server_name  localhost;

    # Logs dans stdout/stderr pour Docker
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    # Répertoire racine pour les fichiers de l'application Flutter
    root /usr/share/nginx/html;

    # Configuration du cache pour les assets (pour la performance)
    location /assets/ {
        # Cache pour 30 jours pour les assets statiques
        expires 30d;
        try_files $uri =404;
    }

    # Toutes les autres requêtes sont redirigées vers index.html
    # C'est essentiel pour le routing de Flutter (deep links)
    location / {
        try_files $uri $uri/ /index.html;
    }

    # Configuration de sécurité NGINX
    # Évite l'affichage des informations de version de NGINX
    server_tokens off;

    # Sécurité: Ajout des en-têtes de sécurité
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    # Utilisation du Content-Security-Policy par défaut, à ajuster
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' data: https://fonts.gstatic.com;" always;
}